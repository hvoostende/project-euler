/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

package main

import "fmt"

func giveMaximumSliceOfFibonacci(max int) []int {
	fibonacciSlice := []int{1, 2}

	for {
		nextNumber := fibonacciSlice[len(fibonacciSlice)-1] + fibonacciSlice[len(fibonacciSlice)-2]
		if nextNumber >= max {
			break
		}
		fibonacciSlice = append(fibonacciSlice, nextNumber)
	}
	return fibonacciSlice
}

func main() {
	var total int
	sliceOfFib := giveMaximumSliceOfFibonacci(4000000)
	for _, v := range sliceOfFib {
		if v%2 == 0 {
			total += v
		}
	}
	fmt.Println("Fibonacci numbers below 4000.000:", sliceOfFib)
	fmt.Println("Sum of the even-valued terms", total)
}
